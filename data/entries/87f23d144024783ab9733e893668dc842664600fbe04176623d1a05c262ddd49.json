{"title":"[LoRa] สร้าง Private LoRaWAN ด้วย LoRa Server Project บน Raspberry Pi 3","link":"https://thanapon.info/lora-private-lora-server/","date":1562177642000,"content":"<p>หลังจากที่คราวก่อนผมได้เขียนบทความเกี่ยวกับการ <a href=\"http://thanapon.info/?p=367\">สร้าง Single Channel Packet Forwarding บน Raspberry Pi 3 ต่อกับ RFM95w</a> โดย Packet forwarding นี้จะทำการ forward ข้อมูลไปยัง The Things Network ซึ่งปัญหาก็คือเราต้องเชื่อมต่อเข้ากับ Internet ด้วยถ้าหากไม่มี Internet หล่ะหรือบางคนอยากจะทำ LoRaWAN ขึ้นมาเพื่อใช้เองหล่ะ</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>แล้วทีนี้เราจะทำยังไง ?</p></blockquote>\n\n\n\n<p id=\"d219\">หลังจากที่พยายามค้นหาวิธีการทำ Private LoRaWAN อยู่ก็ได้ไปเจอ LoRa Server Project ซึ่งคิดว่ามันเจ๋งมากเพราะเป็นโปรเจค open-source ซึ่งถือว่าครบครันเลยที่เราจะใช้สร้าง Private LoRaWAN ไม่ว่าจะเป็น LoRa Gateway, LoRa Server และ LoRa App Server โดยเราสามารถทำมาใช้สร้างระบบ IoT [Internet of Things] ได้เลยครับ</p>\n\n\n\n<h2 id=\"2bfa\">What is LoRa Server Project</h2>\n\n\n\n<p id=\"aac1\">LoRa Server Project คือ ชุด open-source ที่ใช้ในการสร้าง LoRaWAN Network โดยภายในประกอบไปด้วย LoRa Gateway Bridge, LoRa Network Server, LoRa Application Server, LoRa Geo Server, LoRa Gateway OS.</p>\n\n\n\n<ul><li>LoRa Gateway Bridge คือส่วนที่รับข้อมูลมาจาก packet forwarding ซึ่งเราจำเป็นต้องมี LoRa Packet forwarding ก่อนนะครับ</li><li>LoRa Network Server คือส่วนที่ทำหน้าที่จัดการกับ Packet ที่ได้รับจาก LoRa Gateway Bridge</li><li>LoRa Application Server คือส่วนที่นำข้อมูลไปประยุกต์ใช้ต่างๆ ไม่ว่าจะเป็นการให้บริการ API สำหรับเชื่อมต่อกับ application ภายนอก, การจัดการ Application Gateway หรือ End-Device ซึ่งเราสามารถใช้ Web interface ในการควบคุม LoRaWAN Network เหมือนกับ The Things Network</li><li>LoRa Geo Server เป็นระบบ Geolocation ซึ่งสามารถใช้ในการหาตำแหน่งของอุปกรณ์โดยใช้หลักการของ Time-difference of arrival</li><li>LoRa Gateway OS คือ Linux embedded OS โดยรวม package ต่างๆที่จำเป็นสำหรับใช้ในการสร้าง LoRaWAN อยู่ในตัว</li></ul>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://miro.medium.com/max/1681/0*xVSXPkmUiP-WTPR2.png\" alt=\"Image for post\"/></figure>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>การทำงานของ LoRa Server Project จะทำหน้าที่รับข้อมูลจาก LoRa Gateway/Packet Forwarding แล้วส่งข้อมูลต่อไปยัง LoRa Gateway Bridge หลังจากนั้น LoRa Gateway Bridge ก็จะทำการ forward packet ไปยัง LoRa Server โดยผ่าน MQTT Protocol ซึ่งในส่วน LoRa Server จะทำการจัดการกับ Packet ที่ได้รับมา ยกตัวอย่างเช่นหากเรามี Packet ที่ซ้ำกันโดย Packet นี้ถูกส่งมาจาก Gateway หลายๆตัวที่อยู่ใกล้ๆกัน LoRa Server จะทำการคัดเลือก Packet แล้วจากนั้นก็ส่ง Packetต่อไปยัง LoRa App Server เพื่อนำข้อมูลไปใช้งานครับ</p></blockquote>\n\n\n\n<h2 id=\"e602\">เริ่มต้นสร้าง Private LoRaWAN กัน</h2>\n\n\n\n<p id=\"663c\">หลังจากที่ผมได้อธิบาย concept คราวๆของ LoRa Server Project แล้วหวังว่าผู้อ่านทุกท่านคงจะเข้าใจนะครับ จุดประสงค์หลักของบทความนี้คือ ผมอยากจะสร้าง Private LoRaWAN Netword เพื่อใช้ในระบบ IoT แต่ก่อนอื่นทุกท่านต้องทำการติดตั้ง packet forwarding ก่อนนะครับ ตามนี้เลยครับ <a href=\"http://thanapon.info/?p=367\" data-type=\"post\" data-id=\"367\">[LoRa] สร้าง single channel gateway [TTN] ด้วย Raspberry Pi + RFM95w</a> เพราะเราจำเป็นต้องใช้ Packet forwarding ในการ route LoRa Packet มายัง LoRa Gateway Bridge ครับ</p>\n\n\n\n<h2 id=\"23ce\">Install LoRa Gateway Bridge</h2>\n\n\n\n<ul><li>ก่อนติดตั้ง LoRa Gateway Bridge เราจำเป็นต้องติดตั้ง MQTT Broker เพราะโครงสร้างของ LoRa Server Project นั้น LoRa Gateway Bridge จะใช้ MQTT เป็นตัวเชื่อมต่อ packet ระหว่าง LoRa Gateway Bridge และ LoRa Server ครับซึ่งทาง LoRa Server Project ก็ได้แนะนำให้ติดตั้ง <a href=\"http://mosquitto.org/\">Mosquitto</a> ซึ่งเป็น open-source MQTT Broker โดยเราสามารถติดตั้งผ่าน CLI ตามข้างล่างนี้ได้เลยครับ</li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">sudo apt-get install mosquitto</pre>\n\n\n\n<ul><li>หลังจากนั้นให้เพิ่ม Package Repository สำหรับดาวน์โหลด LoRa Server Project</li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">sudo echo \"deb https://artifacts.loraserver.io/packages/3.x/deb stable main\" | sudo tee /etc/apt/sources.list.d/loraserver.list\nsudo apt-get update</pre>\n\n\n\n<ul><li>แล้วทำการติตตั้ง LoRa Gateway Bridge</li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">sudo apt-get install lora-gateway-bridge</pre>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://miro.medium.com/max/1174/1*GPnkyAlDmdnnestgIZ30Bg.png\" alt=\"Image for post\"/></figure>\n\n\n\n<ul><li>หลังจากที่ติดตั้งเสร็จแล้ว ค่า default ของ LoRa Gateway Bridge จะทำการ binding กับ IP Address เป็น 0.0.0.0 Port 1700 นะครับส่วน MQTT Broker นั้นจะเป็น tcp://127.0.0.1:1883 ครับซึ่งเราสามารถเข้าไปแก้ไขการตั้งค่าต่างได้ในไฟล์ <strong>/etc/lora-gateway-bridge/lora-gateway-bridge.toml<br></strong>[<a href=\"https://www.loraserver.io/lora-gateway-bridge/install/config/\">See more detail]</a></li><li>เมื่อตั้งต่าเสร็จแล้วขั้นตอนต่อไปทำการเปลี่ยนเส้นทางการ forward packet ของ <a href=\"https://medium.com/@thanapontapala/lora-สร้าง-single-channel-gateway-ttn-ด้วย-raspberry-pi-rfm95w-กัน-e9fc99a1e622\">Single Channel Gateway จากบทความก่อนหน้านี้</a>โดยทำการชี้ Server ที่เราจะส่ง packet ไปจากบทความก่อนจะส่งไปยัง The Things Network ให้เราเปลี่ยนมาเป็นส่งเข้าไปยัง Localhost แทน โดยเราจะเข้าไปแก้ไขไฟล์ global_conf.json ซึ่งจะอยู่ใน directory single_chan_pkt_fwd ครับ</li></ul>\n\n\n\n<div class=\"hcb_wrap\"><pre class=\"prism line-numbers lang-json\" data-lang=\"JSON\"><code>{\n  &quot;SX127x_conf&quot;:\n  {\n    &quot;freq&quot;: 923200000,\n    &quot;spread_factor&quot;: 7,\n    &quot;pin_nss&quot;: 10,\n    &quot;pin_dio0&quot;: 24,\n    &quot;pin_rst&quot;: 0,\n    &quot;pin_led1&quot;:5\n  },\n  &quot;gateway_conf&quot;:\n  {\n    &quot;ref_latitude&quot;: 0.0,\n    &quot;ref_longitude&quot;: 0.0,\n    &quot;ref_altitude&quot;: 10,\n\n    &quot;name&quot;: &quot;SC Gateway&quot;,\n    &quot;email&quot;: &quot;contact@whatever.com&quot;,\n    &quot;desc&quot;: &quot;Single Channel Gateway on RPI&quot;,\n\n    &quot;servers&quot;:\n    [\n      {\n        &quot;address&quot;: &quot;127.0.0.1&quot;,\n        &quot;port&quot;: 1700,\n        &quot;enabled&quot;: true\n      },\n      {\n        &quot;address&quot;: &quot;router.eu.staging.thethings.network&quot;,\n        &quot;port&quot;: 1700,\n        &quot;enabled&quot;: false\n      }\n    ]\n  }\n}</code></pre></div>\n\n\n\n<ul><li>หลังจากแก้ไขไฟล์ global_conf.json เสร็จแล้วให้ทำการ compile หลังจากนั้นก็ทำการรัน single_chan_pkt_fwd</li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">make\nmake install\nsystemctl start single_chann_pkt_fwd</pre>\n\n\n\n<p></p>\n\n\n\n<h2 id=\"2c4e\">Install LoRa Server</h2>\n\n\n\n<ul><li>ก่อนทำการติดตั้ง LoRa Server เราต้องติดตั้ง dependencies สำหรับการใช้งาน LoRa Server ก่อน ซึ่งจะมี MQTT Broker, PostgreSQL database และ Redis database โดยก่อนหน้าเราได้ติดตั้ง MQTT Broker แล้วซึ่งก็ไม่ต้องติดตั้งอีกนะครับ</li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">sudo apt-get install postgresql\nsudo apt-get install redis-server</pre>\n\n\n\n<p></p>\n\n\n\n<ul><li>ทำการสร้าง database สำหรับ LoRaServer ซึ่งในที่นี้เราจะใช้ PostgreSQL</li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">sudo -u postgres psql\ncreate role loraserver_ns with login password 'dbpassword';\ncreate database loraserver_ns with owner loraserver_ns;</pre>\n\n\n\n<p></p>\n\n\n\n<ul><li>หลังจากนั้นทำการทดสอบการเชื่อมต่อ PostgreSQL โดยใช้ Password คือ <strong>dbpassword</strong></li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">psql -h localhost -U loraserver_ns -W loraserver_ns</pre>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://miro.medium.com/max/1113/1*p3qIzwPy8y0PMVDCi7ylRQ.png\" alt=\"Image for post\"/></figure>\n\n\n\n<ul><li>เมื่อเชื่อมต่อกับ Database สำเร็จแล้วต่อไปเราก็ทำการติดตั้ง LoRa Server โดยสามารถดาวน์โหลดได้จาก Repository ได้เลย</li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">sudo apt-get install loraserver</pre>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://miro.medium.com/max/1097/1*AzybbdiYc1h5gu6GGo-J2Q.png\" alt=\"Image for post\"/></figure>\n\n\n\n<ul><li>หลังจากติดตั้ง LoRa Server เสร็จแล้วเราสร้างไฟล์ configuration สำหรับตั้งค่าการทำงานของ LoRa Server <strong>โดยสามารถดาวน์โหลด </strong><a href=\"https://gist.github.com/toygame/58e13ef905dd4590ea78c7db2dbeb828\"><strong>loraserver.toml</strong></a><strong> ซึ่งผมได้แก้ไข parameter ใน postgresql และ LoRaWAN regional band configuration เรียบร้อยแล้วสามารถนำไปใช้ได้เลยครับ</strong></li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">loraserver configfile > loraserver.toml\nnano loraserver.toml</pre>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://miro.medium.com/max/1109/1*wzLXu5xYAV6JjRLNty_rYQ.png\" alt=\"Image for post\"/></figure>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://miro.medium.com/max/917/1*vFgJS4VhkctZSjetQHYtjw.png\" alt=\"Image for post\"/></figure>\n\n\n\n<ul><li>หลังจากแก้ไขแล้วให้ทำการ save ไฟล์ loraserver.toml แล้วทำการ copy ไปยัง <strong>/etc/loraserver/loraserver.toml</strong></li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">cp loraserver.toml /etc/loraserver/</pre>\n\n\n\n<ul><li>เมื่อติดตั้งเสร็จแล้วให้ทำการทดสอบการทำงานของ LoRa Server โดยใช้คำสั่ง</li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">loraserver</pre>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://miro.medium.com/max/1394/1*at5XC0OErXM5RSp0ya1TiA.png\" alt=\"Image for post\"/></figure>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>เป็นอันเสร็จสิ้นสำหรับการติดตั้ง LoRa Server ขั้นตอนต่อไปติดตั้ง LoRa App Server เพื่อใช้ในการจัดการ LoRa Server Project กันครับ</p></blockquote>\n\n\n\n<h2 id=\"12ba\">Install LoRa App Server</h2>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>[ติดตั้ง Web UIเพื่อควบคุม LoRa Server Project]</p></blockquote>\n\n\n\n<ul><li>เริ่มต้นให้ทำการสร้าง user และ database สำหรับ PostgreSQL</li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">sudo -u postgres psql\ncreate role loraserver_as with login password 'dbpassword';\ncreate database loraserver_as with owner loraserver_as;</pre>\n\n\n\n<ul><li>หลังจากนั้นทำการตั้งค่า PostgreSQL เพื่อทำการ enable pq_trgm extension สำหรับ database: loraserver_as ที่เราสร้างในขั้นตอนก่อนหน้านี้</li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">\\c loraserver_as\ncreate extension pg_trgm;\n\\q</pre>\n\n\n\n<ul><li>จากนั้นทดลอง เชื่อมต่อเข้ากับ PostgreSQL ผ่าน CLI โดยใช้ password: <strong>dbpassword</strong></li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">psql -h localhost -U loraserver_as -W loraserver_as</pre>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://miro.medium.com/max/1046/1*g6tDtVxT10RU18uFMYdeqg.png\" alt=\"Image for post\"/></figure>\n\n\n\n<ul><li>ติดตั้ง LoRA App Server ด้วยคำสั่ง</li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">sudo apt-get install lora-app-server</pre>\n\n\n\n<ul><li>จากนั้นให้สร้างไฟล์ configuration สำหรับตั้งค่า LoRa App Server ซึ่งเราสามารถใช้คำสั่งเพื่อ generate configuration file โดย parameter ที่ได้จะเป็นค่า default <strong>โดยผมได้แก้ไขไฟล์</strong><a href=\"https://gist.github.com/toygame/18e730fe33f94a6172374241cff72e51\"><strong> lora-app-server.toml</strong></a><strong> ให้แล้ว สามารถดาวน์โหลดมาได้เลยครับ</strong></li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\"> lora-app-server configfile > lora-app-server.toml</pre>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://miro.medium.com/max/1112/1*Joqmexfw6sGUQa36PLx5Rw.png\" alt=\"Image for post\"/></figure>\n\n\n\n<ul><li>หลังจากที่ได้ไฟล์มาแล้วเราจำเป็นต้องทำการ generate JWT secret เพื่อใช้ในการ authentication สำหรับเชื่อมต่อ API กับ LoRa Server</li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">openssl rand -base64 32</pre>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://miro.medium.com/max/875/1*7hS_eAlhg6aSYg0wk69gkg.png\" alt=\"Image for post\"/></figure>\n\n\n\n<ul><li>ให้เพิ่ม jwt_secret ในไฟล์ lora-app-server.toml</li></ul>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://miro.medium.com/max/1099/1*t8NfqIgm6k-JtcbbbH8JBA.png\" alt=\"Image for post\"/></figure>\n\n\n\n<ul><li>เสร็จแล้วทำการ save ไฟล์ lora-app-server.toml แล้วทำการ copy ไปไปยัง <strong>/etc/lora-app-server/lora-app-server.toml</strong></li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">cp lora-app-server.toml /etc/lora-app-server/</pre>\n\n\n\n<ul><li>ทดสอบการทำงานของ Lora app server กันครับว่าจะใช้ได้ไหม??</li></ul>\n\n\n\n<pre class=\"wp-block-preformatted\">lora-app-server</pre>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://miro.medium.com/max/1267/1*et31o4FrE4fPP-qCG8t69g.png\" alt=\"Image for post\"/></figure>\n\n\n\n<p id=\"e5d9\">*** เราสามารถเข้าไปแก้ไข configuration ได้ที่ <strong>/etc/lora-app-server/lora-app-server.toml </strong>โดยค่า default ของ Web Interface สำหรับการตั้งค่า LoRa App Server สามารถเข้าผ่าน<br><strong>http://ip-address-RPI:8080 </strong>ซึ่งusername:<strong> admin, </strong>password:<strong> admin</strong> ส่วน REST API นั้นสามารถ access ผ่าน <strong>http://ip-address-RPI:8080/api </strong>ได้เลยครับ</p>\n\n\n\n<p id=\"5325\">*** pg_trgm คือ module ที่ใช้ในการจัดการกับข้อความตัวอักษรและตัวเลขโดยใช้ trigram matching ยกตัวอย่างเช่น “cat” เราสามารถแบ่งได้เป็น “c”, “ca” และ “at” ซึ่งจะมีประโยชน์มากในการทำ search ครับ</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>เมื่อติดตั้งทุกอย่างเสร็จเรียบร้อยแล้วให้เรา restart Respberry Pi หลังจากนั้นให้เราเข้า Web interface ผ่าน Browser ดูครับ</p></blockquote>\n\n\n\n<h2 id=\"e45b\">LoRaServer With Web Interface</h2>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://miro.medium.com/max/1920/1*jlG9llN8tpnZlJ7AKcYB5g.png\" alt=\"Image for post\"/></figure>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://miro.medium.com/max/1920/1*P099hdbGGseLETCNdLlUlw.png\" alt=\"Image for post\"/></figure>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://miro.medium.com/max/1920/1*Yi-nbPnbUixIgMbddvonbA.png\" alt=\"Image for post\"/></figure>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>เย้!!!! ใช้งาน LoRa Server Project ได้แล้วส่วนเรื่องการ config ของ LoRaServer ผมขอไปเขียนเพิ่มอีกหนึ่งบทความละกันครับเพราะดูแล้วน่าจะยาวถ้าเขียนรวมกับบทความนี้ สำหรับวันนี้ขอบคุณทุกท่านที่ติดตามครับ หากติดปัญหาหรือผิดพลาดประการใดขออภัยด้วยครับ</p></blockquote>\n\n\n\n<p id=\"8380\"></p>","author":"thanapon.tap","siteTitle":"Thanapon","siteHash":"6a039c2f54d76e4c49227d80968f2a30de5427cc57525c047c383ea3563cde5f","entryHash":"87f23d144024783ab9733e893668dc842664600fbe04176623d1a05c262ddd49","category":"Thai"}