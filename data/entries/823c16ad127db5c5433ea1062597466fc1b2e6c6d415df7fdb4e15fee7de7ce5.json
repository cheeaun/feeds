{"title":"Announcing the Couchbase Secrets Engine","link":"https://www.hashicorp.com/blog/announcing-the-couchbase-secrets-engine","date":1608566400000,"content":"<p>We are excited to announce the release of the <a href=\"https://www.vaultproject.io/docs/secrets/databases/couchbase\">Couchbase Secrets Engine</a> for HashiCorp Vault. The secrets engine is packaged as part of the general database secrets engine and supports root credential rotation, dynamic and static roles.</p>\n<p>The Couchbase secrets engine was originally created by Francis Hitchens (<a href=\"https://github.com/fhitchen\">GitHub</a>, <a href=\"https://www.linkedin.com/in/francis-hitchens-7b16283/\">LinkedIn</a>), who did the initial development work before collaborating with both the Couchbase and Vault engineering teams. We would like to thank Francis for the amazing contribution to the HashiCorp Vault open-source ecosystem!</p>\n<h2><a class=\"__permalink-h\" href=\"#what-is-hashicorp-vault\" aria-label=\"what is hashicorp vault permalink\">»</a><a class=\"__target-h\" id=\"what-is-hashicorp-vault\" aria-hidden></a>What is HashiCorp Vault</h2>\n<p><a href=\"https://www.vaultproject.io/\">HashiCorp Vault</a> is a tool for securely accessing secrets. A secret is anything that you want to tightly control access to, such as API keys, passwords, or certificates. Vault provides a unified interface to any secret while providing tight access control and recording a detailed audit log.</p>\n<h2><a class=\"__permalink-h\" href=\"#why-dynamic-secrets\" aria-label=\"why dynamic secrets permalink\">»</a><a class=\"__target-h\" id=\"why-dynamic-secrets\" aria-hidden></a>Why Dynamic Secrets?</h2>\n<p>Today most organizations are utilizing static secrets. These are defined ahead of time and shared between many clients. A dynamic secret is generated on demand and is unique to a client. Vault associates each dynamic secret with a lease and automatically destroys the credentials when the lease expires. By leveraging just in time ephemeral credentials, organizations are able to dramatically reduce the blast radius in case of credential leakage. Vault takes over the operational burden of managing credential lifecycle by renewing or revoking credentials as needed.</p>\n<h2><a class=\"__permalink-h\" href=\"#what-is-couchbase\" aria-label=\"what is couchbase permalink\">»</a><a class=\"__target-h\" id=\"what-is-couchbase\" aria-hidden></a>What is Couchbase?</h2>\n<p>Couchbase is an open-source, distributed multi-model NoSQL document-oriented database. It exposes a scale-out, key-value store with managed cache for extremely fast data operations,  as well as purpose-built indexers for efficient SQL-like queries. Enterprises adopt NoSQL databases because they store information in JSON documents instead of columns and rows used by traditional RDMSs. In the world of mobile and cloud applications, Couchbase (and other NoSQL DBs) provide greater agility when it comes to development and the database can operate at a greater scale.</p>\n<h2><a class=\"__permalink-h\" href=\"#the-couchbase-database-secrets-engine\" aria-label=\"the couchbase database secrets engine permalink\">»</a><a class=\"__target-h\" id=\"the-couchbase-database-secrets-engine\" aria-hidden></a>The Couchbase Database Secrets Engine</h2>\n<p>As we mentioned at the top of this post, the database secrets engine supports static and dynamic roles as well as root credential rotation. For both static and dynamic roles, the Couchbase secrets engine supports the setting of <a href=\"https://www.vaultproject.io/docs/concepts/password-policies\">default password policies</a> so the generated passwords will meet an organization's password requirements.</p>\n<ul>\n<li><strong>Static Roles:</strong> Static roles are a 1-to-1 mapping of Vault Roles to usernames in Couchbase. The current password for the database user is stored and automatically rotated by Vault on a configurable period of time.</li>\n</ul>\n<pre class=\"language-shell\"><code class=\"language-shell\">$ vault <span class=\"token function\">write</span> database/static-roles/my-static-role <span class=\"token punctuation\">\\</span>\n    <span class=\"token assign-left variable\">db_name</span><span class=\"token operator\">=</span><span class=\"token string\">\"my-couchbase-database\"</span> <span class=\"token punctuation\">\\</span>\n    <span class=\"token assign-left variable\">username</span><span class=\"token operator\">=</span><span class=\"token string\">\"my-existing-couchbase-user\"</span> <span class=\"token punctuation\">\\</span>\n    <span class=\"token assign-left variable\">rotation_period</span><span class=\"token operator\">=</span>5m\n</code></pre>\n<ul>\n<li><strong>Dynamic Roles:</strong> For dynamic roles, operators create a role in Vault that is mapped to a Couchbase RBAC role. When a credential request comes in from a client, Vault dynamically generates a unique username and password pair in Couchbase and automatically associates it with the corresponding RBAC role. Vault returns the credentials to the client. Once the lease expires, Vault automatically deletes the user from Couchbase.</li>\n</ul>\n<pre class=\"language-shell\"><code class=\"language-shell\">$ vault <span class=\"token builtin class-name\">read</span> database/creds/my-dynamic-role\nKey                Value\n---                -----\nlease_id           database/creds/my-dynamic-role/wiLNQjtcvCOT1VnN3qnUJnBz\nlease_duration     5m\nlease_renewable    <span class=\"token boolean\">true</span>\npassword           mhyM-Gs7IpmOPnSqXEDe\nusername           v-root-my-dynamic-role-eXnVr4gm55dpM1EVgTYz-1596815027\n</code></pre>\n<ul>\n<li><strong>Root Credential Rotation:</strong> Since Vault is managing the database credentials on behalf of the database administrator, it needs a set of highly privileged credentials that can create and delete users in the database system. Therefore, it is very common to give Vault a set of root** **credentials. However, these credentials are often long-lived and never change once configured on Vault. This may violate the Governance, Risk, and Compliance (GRC) policies surrounding that data stored in the database. Vault is able to rotate the root credentials stored for the Couchbase database connection. Once the root credential has been rotated, only the Vault knows the new password.</li>\n</ul>\n<h2><a class=\"__permalink-h\" href=\"#next-steps\" aria-label=\"next steps permalink\">»</a><a class=\"__target-h\" id=\"next-steps\" aria-hidden></a>Next Steps</h2>\n<p>The Couchbase Secrets Engine is packaged as a Database Secrets Engine Plugin. This plugin is available with all versions of Vault. The step-by-step instructions on how to use the secrets engine are available in the <a href=\"https://www.vaultproject.io/docs/secrets/databases/couchbase\">Vault documentation</a>.</p>","author":"Alex Cahn","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"823c16ad127db5c5433ea1062597466fc1b2e6c6d415df7fdb4e15fee7de7ce5","category":"Tech"}